<?php

/*
 * Additional rules or rules to override.
 * These rules will be added to default rules or will override them if the same key already exists.
 */
 
$additionalRules = [
    'native_function_invocation' => true,
    'phpdoc_add_missing_param_annotation' => ['only_untyped' => false],
    'phpdoc_align' => true,
    'phpdoc_return_self_reference' => true,
    'phpdoc_trim_consecutive_blank_line_separation' => true,
    'phpdoc_types_order' => ['sort_algorithm' => 'alpha', 'null_adjustment' => 'always_last'],
    'phpdoc_to_comment' => false,
    'phpdoc_var_without_name' => false,
];

$rulesProvider = new Facile\CodingStandards\Rules\CompositeRulesProvider([
    new Facile\CodingStandards\Rules\DefaultRulesProvider(),
    new Facile\CodingStandards\Rules\ArrayRulesProvider($additionalRules),
]);

/*
 * You can set manually these paths:
 */
$autoloadPathProvider = new Facile\CodingStandards\AutoloadPathProvider();
$finder = PhpCsFixer\Finder::create()
    ->in($autoloadPathProvider->getPaths())
    ->exclude('DependencyInjection');

$config = PhpCsFixer\Config::create();
$config->setRules($rulesProvider->getRules());
$config->setUsingCache(true);
$config->setRiskyAllowed(true);
$config->setFinder($finder);

return $config;
